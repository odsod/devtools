#!/bin/bash

border_width=5
window_gap=20
top_padding=35

config() {
  bspc config focus_follows_pointer true
  bspc config top_padding "$top_padding"
  bspc config window_gap "$window_gap"
  bspc config external_rules_command ~/.config/bspwm/bspwmrc
  for monitor in $(bspc query --monitors); do
    bspc monitor "$monitor" --add-desktops h t n s g c r l 7 8 9 0
  done
  bspc desktop h --focus
  source ~/github.com/morhetz/gruvbox-contrib/shell/colors.sh
  # Set the border colors.
  bspc config normal_border_color '#a89984'
  bspc config active_border_color '#ebdbb2'
  bspc config focused_border_color '#ebdbb2'
  bspc config border_width "$border_width"
}

external_rules() {
  case $3 in
    scratchpad-terminal)
      scratchpad_terminal_rule "$@"
      ;;
    *google-chrome-scratchpad)
      scratchpad_rule "$@"
      ;;
  esac
}

scratchpad_terminal_rule() {
  state=$(bspc wm -d)
  focused_monitor_id=$(jq .focusedMonitorId <<< "$state")
  focused_monitor=$(jq ".monitors[] | select(.id == ${focused_monitor_id})" <<< "$state")
  focused_monitor_width=$(jq .rectangle.width <<< "$focused_monitor")
  focused_monitor_height=$(jq .rectangle.height <<< "$focused_monitor")
  case $(< /tmp/scratchpad-terminal-layout) in
    mid)
      width=$((focused_monitor_width - 2*window_gap - 2*border_width))
      height=$((focused_monitor_height - top_padding - 2*window_gap - 2*border_width))
      x=$((window_gap))
      y=$((top_padding + window_gap))
      echo "sticky=on state=floating rectangle=${width}x${height}+${x}+${y}"
      ;;
    top)
      width=$((focused_monitor_width - 2*window_gap - 2*border_width))
      height=$(( (focused_monitor_height - top_padding - 3*window_gap - 4*border_width) / 2 ))
      x=$window_gap
      y=$(( top_padding + window_gap ))
      echo "sticky=on state=floating rectangle=${width}x${height}+${x}+${y}"
      ;;
    bottom)
      width=$((focused_monitor_width - 2*window_gap - 2*border_width))
      height=$(( (focused_monitor_height - top_padding - 3*window_gap - 4*border_width) / 2 ))
      x=$window_gap
      y=$((top_padding + 2*window_gap + 2*border_width + height))
      if [[ -f /tmp/scratchpad ]]; then
        height=$((height / 2))
      fi
      echo "sticky=on state=floating rectangle=${width}x${height}+${x}+${y}"
      ;;
    left)
      width=$(( (focused_monitor_width - 3*window_gap - 4*border_width) / 2 ))
      height=$((focused_monitor_height - top_padding - 2*window_gap - 2*border_width))
      x=$window_gap
      y=$(( top_padding + window_gap ))
      echo "sticky=on state=floating rectangle=${width}x${height}+${x}+${y}"
      ;;
    right)
      width=$(( (focused_monitor_width - 3*window_gap - 4*border_width) / 2 ))
      height=$((focused_monitor_height - top_padding - 2*window_gap - 2*border_width))
      x=$(( width + 2*window_gap + 2*border_width))
      y=$(( top_padding + window_gap ))
      echo "sticky=on state=floating rectangle=${width}x${height}+${x}+${y}"
      ;;
  esac
}

scratchpad_rule() {
  state=$(bspc wm -d)
  focused_monitor_id=$(jq .focusedMonitorId <<< "$state")
  focused_monitor=$(jq ".monitors[] | select(.id == ${focused_monitor_id})" <<< "$state")
  focused_monitor_width=$(jq .rectangle.width <<< "$focused_monitor")
  focused_monitor_height=$(jq .rectangle.height <<< "$focused_monitor")
  case $3 in
    *google-chrome-scratchpad*)
      width=$((focused_monitor_width - 2*window_gap - 2*border_width))
      height=$((focused_monitor_height - top_padding - 2*window_gap - 2*border_width))
      x=$((window_gap))
      y=$((top_padding + window_gap))
      echo "sticky=on state=floating rectangle=${width}x${height}+${x}+${y}"
      ;;
    scratchpad-terminal-mid)
      width=$((focused_monitor_width - 2*window_gap - 2*border_width))
      height=$((focused_monitor_height - top_padding - 2*window_gap - 2*border_width))
      x=$((window_gap))
      y=$((top_padding + window_gap))
      echo "sticky=on state=floating rectangle=${width}x${height}+${x}+${y}"
      ;;
    scratchpad-terminal-top)
      width=$((focused_monitor_width - 2*window_gap - 2*border_width))
      height=$(( (focused_monitor_height - top_padding - 3*window_gap - 4*border_width) / 2 ))
      x=$window_gap
      y=$(( top_padding + window_gap ))
      echo "sticky=on state=floating rectangle=${width}x${height}+${x}+${y}"
      ;;
    scratchpad-terminal-bottom)
      width=$((focused_monitor_width - 2*window_gap - 2*border_width))
      height=$(( (focused_monitor_height - top_padding - 3*window_gap - 4*border_width) / 2 ))
      x=$window_gap
      y=$((top_padding + 2*window_gap + 2*border_width + height))
      if [[ -f /tmp/scratchpad ]]; then
        height=$((height / 2))
      fi
      echo "sticky=on state=floating rectangle=${width}x${height}+${x}+${y}"
      ;;
    scratchpad-terminal-left)
      width=$(( (focused_monitor_width - 3*window_gap - 4*border_width) / 2 ))
      height=$((focused_monitor_height - top_padding - 2*window_gap - 2*border_width))
      x=$window_gap
      y=$(( top_padding + window_gap ))
      echo "sticky=on state=floating rectangle=${width}x${height}+${x}+${y}"
      ;;
    scratchpad-terminal-right)
      width=$(( (focused_monitor_width - 3*window_gap - 4*border_width) / 2 ))
      height=$((focused_monitor_height - top_padding - 2*window_gap - 2*border_width))
      x=$(( width + 2*window_gap + 2*border_width))
      y=$(( top_padding + window_gap ))
      echo "sticky=on state=floating rectangle=${width}x${height}+${x}+${y}"
      ;;
  esac
}

toggle_scratchpad() {
  id=$(xdotool search "$2")
  if [[ $id ]]; then
    bspc node "$id" --flag hidden -f
    return
  fi
  case $2 in 
    *google-chrome-scratchpad*)
      cd ~ && google-chrome --user-data-dir=.config/google-chrome-scratchpad &
      xdotool search --sync --limit 1 --classname google-chrome-scratchpad > /tmp/google-chrome-scratchpad
      ;;
  esac
}

toggle_scratchpad_terminal() {
  layout=$2
  echo "$layout" > /tmp/scratchpad-terminal-layout
  id=$(xdotool search --limit 1 --classname scratchpad-terminal)
  if [[ $id ]]; then
    bspc node "$id" --close
  else
    cd ~ && urxvtmux scratchpad-terminal
  fi
}

if [[ $1 == 'toggle' ]]; then
  toggle_scratchpad "$@"
elif [[ $1 == 'toggle-scratchpad-terminal' ]]; then
  toggle_scratchpad_terminal "$@"
elif [[ $1 && $2 && $3 ]]; then
  external_rules "$@"
else 
  config "$@"
fi
