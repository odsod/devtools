- hosts: all

  tasks:
    - name: Add config lines
      become: yes
      become_user: root
      lineinfile:
        dest: '/etc/{{item.file}}'
        line: '{{item.line}}'
        state: present
        create: yes
      with_items:
        - {file: vconsole.conf, line: FONT=Lat2-Terminus16}
        - {file: vconsole.conf, line: KEYMAP=dvorak}
        - {file: locale.conf, line: LANG=en_US.UTF-8}
      tags: [config]

    - name: Render config templates
      become: yes
      become_user: root
      template:
        src: 'etc/{{item}}.j2'
        dest: /etc/{{item}}
      with_items:
        - hostname
      tags: [config]

    - name: Create dotfolders
      file:
        path: ~/.{{item}}
        state: directory
      with_items:
        - bin
        - clipmenu
        - xmonad
        - bash.d
        - Xresources.d
        - xkb/symbols
        - local/share/nvim/site/autoload
        - config/nvim
        - config/qutebrowser
        - urxvt/ext
      tags: [dotfolders]

    - name: Install dotfiles
      copy:
        src: dotfiles/{{item}}
        dest: ~/.{{item}}
      with_items:
        - Xresources
        - tmux.conf
        - xmonad/xmonad.hs
        - xkb/symbols/poskeys
        - xinitrc
        - gemrc
        - psqlrc
        - config/nvim/init.vim
        - config/qutebrowser/config.py
        - bashrc
        - inputrc
        - bash.d/prompt.bash
        - urxvt/ext/clipboard
      tags: [dotfiles]

    - name: Render dotfile templates
      template:
        src: '{{item}}.j2'
        dest: ~/.{{item}}
      with_items:
        - Xresources.d/rxvt-unicode
        - bash.d/theme.bash
        - gitconfig
      tags: [dotfiles]

    - name: Install scripts into ~/.bin
      copy:
        src: scripts/{{item}}
        dest: ~/.bin/{{item}}
        mode: 0755
      with_items:
        - print-bash-colors
        - print-tmux-colors
        - clipmenu
        - tmuxargs
        - tmuxssh
        - ttymux
        - setxkb
        - dmenu
        - mvn-autoenforce
      tags: [scripts]

    - name: Symlink odbox script
      file:
        src: '{{playbook_dir}}/files/scripts/odbox'
        dest: ~/.bin/odbox
        state: link
      tags: [scripts]

    - name: Install pacman packages
      become: yes
      become_user: root
      pacman:
        name: '{{item}}'
        state: present
      with_items:
        # Base packages
        - base
        - base-devel

        # More base
        - zip
        - parallel
        - gthumb

        # VirtualBox guest additions
        - virtualbox-guest-modules-arch
        - virtualbox-guest-utils

        # XOrg
        - xorg-server
        - xorg-xinit
        - xorg
        - xsel
        - xclip
        - arandr

        # OpenGL
        - glfw-x11

        # XMonad
        - xmonad
        - xmonad-contrib
        - xcompmgr
        - unclutter
        - dmenu

        # Fonts
        - ttf-liberation

        # Terminal
        - rxvt-unicode
        - tmux

        # Tools
        - units
        - neovim
        - fzf
        - moreutils
        - wget
        - git
        - ansible
        - fabric
        - openssh
        - htop
        - iftop
        - iotop
        - jq
        - unzip
        - ncdu
        - keepassx2
        - tcpdump
        - ngrep
        - wireshark-cli
        - bind-tools
        - httpie
        - the_silver_searcher

        # Java
        - jdk8-openjdk
        - maven

        # Go
        - go
        - go-tools

        # Docker
        - docker

        # NodeJS
        - nodejs
        - npm

        # Jupyter
        - jupyter
        - jupyter-notebook
        - python-pandas
        - python-matplotlib

        # Browser
        - qutebrowser

        # Python
        - python2
        - python
        - flake8
        - python2-flake8

        # C++
        - cmake
        - gcc
        - clang
        - gdb

        # ASM
        - nasm

        # Ruby
        - ruby
        - ruby-bundler

        # Scala
        - scala

        # Shell
        - bash-completion
        - shellcheck
      tags: [packages, pacman]

    - name: Install python packages
      become: yes
      become_user: root
      pacman:
        name: '{{item[0]}}-{{item[1]}}'
        state: present
      with_nested:
        - [python, python2]
        -
          - setuptools
          - pip
          - virtualenv
          - requests
          - docopt
          - yaml
          - tox
      tags: [packages, python]

    - name: Install pip3 packages
      become: yes
      become_user: root
      pip:
        name: '{{item}}'
        state: latest
        executable: /usr/bin/pip3
      with_items:
        - proselint
      tags: [packages, pip3]

    - name: Install Ruby gems
      become: yes
      become_user: root
      gem:
        name: '{{item}}'
        user_install: no
      with_items:
        - puppet-lint
        - mdl
      tags: [packages, gem]

    - name: Install npm packages
      become: yes
      become_user: root
      npm:
        name: '{{item}}'
        global: yes
        state: latest
      with_items:
        - yarn
        - diff-so-fancy
        - create-react-app
        - sloc
      tags: [packages, npm]

    - name: Create director ~/aur
      file:
        path: ~/aur
        state: directory
        mode: 0755
      tags: [packages, aur]

    - name: Install AUR packages
      aur:
        name: '{{item}}'
        dir: ~/aur
      with_items:
        - cower
        - pacaur
        - hsetroot
        - fpp-git
        - google-cloud-sdk
        - leiningen
        - intellij-idea-ce
        - icdiff
        - ttf-ms-fonts
        - ttf-iosevka
      tags: [packages, aur]

    - name: Create symlink aliases in /usr/local/bin
      become: yes
      become_user: root
      file:
        src: '{{item.src}}'
        dest: '{{item.dest}}'
        state: link
      with_items:
        - {src: /usr/bin/nvim, dest: /usr/local/bin/vi}
        - {src: /usr/bin/nvim, dest: /usr/local/bin/vim}

    - name: Download plug.vim
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: ~/.local/share/nvim/site/autoload/plug.vim
      tags: [nvim]

    - name: Set group ownership of /media to users
      become: yes
      become_user: root
      file:
        path: /media
        state: directory
        group: users 
      tags: [media]

    - name: Start services
      become: yes
      become_user: root
      systemd:
        name: '{{item}}'
        enabled: yes
      with_items:
        - dhcpcd
        - vboxservice
        - docker
      tags: [services]

    - name: Add user to groups
      become: yes
      become_user: root
      user:
        name: '{{username}}'
        groups: '{{item}}'
        append: yes
      with_items:
        - docker
        - vboxsf
      tags: [groups]
